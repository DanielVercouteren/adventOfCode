const {performance} = require('perf_hooks');

function run () {
  const boxLabels = ["ymdrcyapvwfloiuktanxzjsieb", "ymdrwhgznwfloiuktanxzjsqeb", "ymdrchguvwfloiuktanxmjsleb", "pmdrchgmvwfdoiuktanxzjsqeb", "ymdrfegpvwfloiukjanxzjsqeb", "ymdrchgpvwfloiukmanazjsdeb", "ymdsnhgpvwflciuktanxzjsqeb", "lmdrbhrpvwfloiuktanxzjsqeb", "ymdrwhgpvwfloiukeanxzjsjeb", "ymdrchgpvpfloihktanszjsqeb", "omdrchgpvwflokuktanazjsqeb", "kmsrchgpvwfloiuktanxqjsqeb", "ymdrchopvwzloiustanxzjsqeb", "omdrchgpvwfloiuktawxtjsqeb", "ymdrchgpvwfroiukhanozjsqeb", "ymdrchgpvwfloikktanyzosqeb", "ymdrchgpvwfioiuktaexzjsqea", "ymdrcngpvwfloiuktanxzjsamb", "ymdrchgpqwfaoiuktanxxjsqeb", "ymdrcmgpvwflziuktakxzjsqeb", "ymdrchguvwsloiuktanxzjsqen", "ymdrchppowfloiuvtanxzjsqeb", "ymdrcngpvwflyiukkanxzjsqeb", "ymdrcbgpvwfloiukjanxzjspeb", "ymdrchgpvwflopuktanxzosseb", "ygdrchgpvwfloiukxanxcjsqeb", "ymdrchgpvwfloauktanuzjsqei", "ymerchgpvwfloiumtanxzjsqet", "ymdlcegpvwfloiuktbnxzjsqeb", "ymdrclgpvwfloiukyanxzjlqeb", "ymdrchgpvwhmoiuktanxijsqeb", "ymdrchgpwrfloiuktanxdjsqeb", "ymdbcwgpvwfloiuktanxzusqeb", "ymgrchgphwfloiuktanxzjspeb", "imdrchgpvwflmiuktanxzjsqib", "ymdrihgpvwfloiiktanxzjsteb", "ywdrchgpvwfloibkvanxzjsqeb", "ymdrchgpxwfloiuktanezjsqes", "ymdrchgpiwfloiukxanxzhsqeb", "ymdrchgpveflokuktdnxzjsqeb", "kmdrchgpvwfloviktanxzjsqeb", "ymdrchgpvgfmoiuytanxzjsqeb", "ymyrchgpvzfluiuktanxzjsqeb", "ymdrchguvwfloiuktanxpjsqlb", "ymerchgpvwfloiukthnxsjsqeb", "hmdrchgpvwglfiuktanxzjsqeb", "ymdrchgpvwfdoiuktanxzjsqaf", "yudrchgdvwfloiuktaexzjsqeb", "ymdbchgxvwfloiuktanxzjsqem", "ymdrchgpvwfloiumjanxzjsqpb", "ymdrchgpqwfloiuqtanxrjsqeb", "ymdqchhpvwfloiuktanxzzsqeb", "ymdryhgpfwfloiuktanxzjsyeb", "xmdrchgpvwfloioitanxzjsqeb", "ykdrchgpvwfloiuktcnxzisqeb", "ymdrcpgprwfloiuktanqzjsqeb", "yidrchgpvwfloiuktanxzjgleb", "ymdrchgpxwfloiuktanxzjsxfb", "ymdrchgfvwfloiuktanxzjiteb", "ymdrchgvvwflqifktanxzjsqeb", "ymdrchgplwfloiuktanizjnqeb", "ymdrchgpvwfyfiuktafxzjsqeb", "ymddchgpvwcloiuktanxzjsqeq", "ymdrchgkvwflaiuktanxzjsqfb", "yudrchgpvwfzoiuktanxzjsreb", "ymdrdhgpvwfloiuktnnxqjsqeb", "ymdrnhgpvwfloiuktauxzjdqeb", "ymdrchgpvwflsiddtanxzjsqeb", "ymdrchgpvwhloeuktanxzjsqek", "ymdrchgpvjfioiuktawxzjsqeb", "ycdrohgpvwfgoiuktanxzjsqeb", "ymdrchgpvwflmifktanxzjsqel", "yfdrchrpvwfloruktanxzjsqeb", "ymdrchgjvwfloiuktanxzrsqeg", "ymarchgpxwfloiukkanxzjsqeb", "ymdrchgppwflghuktanxzjsqeb", "ymdrchvpvwfloiuktanxpjrqeb", "ymdlchgpqjfloiuktanxzjsqeb", "ymdrchgpvwfofiuktandzjsqeb", "ymdrcngpqwfloiuktanlzjsqeb", "ymdrchgpvwfloiuiocnxzjsqeb", "ymdrcogpvwfloizktanxzjcqeb", "ymdrchgpvlfvoiuksanxzjsqeb", "ymdrchgpvwflocpctanxzjsqeb", "ymdrchgpvwfloiuktanlzjsejb", "yndrchgpvwflzifktanxzjsqeb", "ymdrcrgpvkfloiuktanxrjsqeb", "ymdrchhpvwslocuktanxzjsqeb", "ymdrxhgpvwfloiuwtazxzjsqeb", "ymdrchgpvafloiuutanxzjsqxb", "ymdrchppvhfloquktanxzjsqeb", "ymprcugpvwtloiuktanxzjsqeb", "ymdrchgpvvflyiuktanxzjsqvb", "ymdrchgovwfloiuftanxzjwqeb", "ymdrchrpvwflotyktanxzjsqeb", "gmdrchgpvwfloauttanxzjsqeb", "ymdrchmpvofloiukmanxzjsqeb", "ymdrchgpvwflsiuktanxzjspkb", "ymdrchgpvwfloluktajxijsqmb", "ymdrcngpvwfloiukbanxzdsqeb", "ymdrchgpvwploiuktnnxzmsqeb", "ymdrcwgpvwfloiuktbnxhjsqeb", "ymdrcngpvwfloiuktaaxbjsqeb", "ykdrchgpvwfloiuktanxzgsqej", "yuhrchgpvwfdoiuktanxzjsqeb", "ymdrchgpvsfloiukbanxujsqeb", "ymqrchgpvwfliiuktanxzjsteb", "ysdqchgpvwfloiuktanxzjtqeb", "ymdjchgpcwfloiuktanxzrsqeb", "ymdkchgpvwfloiukfanlzjsqeb", "ymdrchgpvxfloikktanxzjiqeb", "smdrchgwewfloiuktanxzjsqeb", "ymdrchgpvwfljiuktanxajsqer", "ymdrchgpowflifuktanxzjsqeb", "ymdrchgpvpzloiukoanxzjsqeb", "yydrchgwvwfvoiuktanxzjsqeb", "ymdgcdgpvwflobuktanxzjsqeb", "ymdechgpvkfloiuktanxzjsjeb", "ymdnchnpvwfloixktanxzjsqeb", "ymdrchgpiefloiuktqnxzjsqeb", "ymprchgpvwfloiuktjnxzjsxeb", "ymdrjdgpzwfloiuktanxzjsqeb", "ymsrchgpywfloiuktanxzjsueb", "ymdrchgpvgoloiuktanxzcsqeb", "ymdrphgpswflbiuktanxzjsqeb", "ymqrchgpvnfloiumtanxzjsqeb", "ymjrchgpvwyloiuktacxzjsqeb", "ymdrchepvwmlqiuktanxzjsqeb", "kmirchgpvwfloiuktanxzjsreb", "ymdncygpvwfloiuktanuzjsqeb", "ymdrzhgpvwploiuktanxzxsqeb", "ymdrchkpvwfloiwkmanxzjsqeb", "ywdrchgovwfloiuktanxzjsceb", "amdrchgpvwfloiuktanrzjqqeb", "ymdpshgpvwfloiuktanxzjyqeb", "ymdrcegpvwfloijktcnxzjsqeb", "ymdrcygpvwfloiuktanxztsqwb", "ymdrchgpvufloiuvtabxzjsqeb", "ymdrchgpvwflkiuktrnxzjsqmb", "ymdrchgpvqfloiuktanxpjfqeb", "ymdrclgpvkfloiyktanxzjsqeb", "ybdxchgpvwfloiuktanxzjskeb", "pmdrchgpvwfzoirktanxzjsqeb", "ycdfchgpvwfloiuktanxzjtqeb", "ymdrchgpdwfloiumtbnxzjsqeb", "ymdrchgpqmfloiuktanxzjsqer", "ymgrchgpvwfroiuktanxzjsqey", "ymdrnhgpvwfloiuktanjzjsqlb", "dmdrchgpvgfloiuktqnxzjsqeb", "yudrchgnvwfloiukranxzjsqeb", "ymdrxhgpvafloiuktanxzjsqeq", "ymdrchgpvwfyofuktanxzjsueb", "ymdrrhgpvwfloiuktavxzjsqpb", "yvdrchgpvwfloiuktalxzhsqeb", "ymdrchgpbwfloiuktanxzfnqeb", "ymdrqhgpvwfloiuvtznxzjsqeb", "ymdrchgpvbfloiuetanxzjsqeo", "ymdrchjpvwfloiuktanxzjnqrb", "ymdrchgpmwfqoiuknanxzjsqeb", "ymdrchgpvwfuoiuktaqxzjtqeb", "ymdrchgpvwfloiuktamxaosqeb", "fmdrchgpvffloiuktanxzjsaeb", "ymdrrhglvwfwoiuktanxzjsqeb", "ymdrchgpvwflohuktanxzjcqei", "ymdrcsgpvwfloiuktaexzjsqek", "ymlrchfpvwfloiuktpnxzjsqeb", "yxdrchgpvwfdoiuvtanxzjsqeb", "ymdrchgrvwfloiuktadxzjsqew", "ymdrchgpvwbloiyktandzjsqeb", "ymdrchgpvsfloiyktanozjsqeb", "ymdrchgpjwfloiuktanxibsqeb", "ymdrchgjvyfloiuktanxzjsqeh", "ymdrchgvvwfloiuktanzrjsqeb", "ymdrchgpvwaloiuktynxzjsqev", "ymdrccgpvwflonvktanxzjsqeb", "ymdrchgqvffloiuktanxfjsqeb", "ymdbchgpvwsloiudtanxzjsqeb", "ymdachgpvwfloiuktanlzjsqwb", "ymdrclgpvwwloiuktanxzjsjeb", "ybdpchgpvwdloiuktanxzjsqeb", "ymdtchgpvwfleijktanxzjsqeb", "ymdrchgpvwfloiustanxzjsxep", "ymdrcjypvwfloiuktanxnjsqeb", "ymdrcdgpvwfloiuutanxkjsqeb", "yhirchgpvufloiuktanxzjsqeb", "ymdrlhgpvwfluigktanxzjsqeb", "ywdrhhgpvwftoiuktanxzjsqeb", "ymdrchgpvwflyiuktanozjsqtb", "cmdrchgpuwfloiukmanxzjsqeb", "ymdochgpvrfloiuktanvzjsqeb", "ymdrcvgpvwfgoiuktfnxzjsqeb", "ymdrchgpmufloiuktanxzssqeb", "ymurchgrvwfloiuktanxzjsqep", "bmdrchgpvwfloiukpanxzjsqmb", "ymdrchgphwvloiuktanszjsqeb", "ymdpkhgpvwfloiuktanxzjsqtb", "ymdrchgpvwfloiuwtanxzjfqev", "ymdrchgpvwfloguktqlxzjsqeb", "ymkrshgpvwflgiuktanxzjsqeb", "ymdrchgpzwfloizktanxznsqeb", "ymdrchgpvxfloiuktegxzjsqeb", "yydrchgpwwfloiuktanxzjsqqb", "ymdrcngwvwfltiuktanxzjsqeb", "ymdszhgwvwfloiuktanxzjsqeb", "ymdrchguvwfjoiuktanxzxsqeb", "ymdomhgpvwfloiuktanxgjsqeb", "ymdrcvgpvwfloiuktanwzzsqeb", "yydrchgpvwfloiuktanxzjmqtb", "rmdrchgpvwfloiuktmnszjsqeb", "ykdrchgpvwfloyuktmnxzjsqeb", "ymcrchkpvwfloiuktanxzjsoeb", "ymdrcrgpvwfloiukpanxzjsceb", "yrdrchgpvwfloiukwanxzjsqhb", "ymdrcfgpvwfloiurtanxojsqeb", "ymdrchgpuwstoiuktanxzjsqeb", "ymdrchgpvwflpxuktanxzjsqer", "ymdrehgpvwfloiuktabxdjsqeb", "yedrchgpvwfloiukqanxzjiqeb", "ymdrthgpvyfloiuktanxzjsqen", "cmdlchgpvwfloiuvtanxzjsqeb", "ymdrchgpvwtloiuktanlpjsqeb", "ymdrchgpvwfloiuktanyvjsqea", "gmdrcogpvwfloiuktanxzjsqqb", "ymmrchgpvwflosuktauxzjsqeb", "ymgrchgjvwfloiuktavxzjsqeb", "ymdbclgpvwfloeuktanxzjsqeb", "ymdrchgpvwfloiuktaixzcsqfb", "ymdrchgpvwflmiuktanxttsqeb", "ymxrchgpvwfloiuktanxzfsqec", "yqzrchgpcwfloiuktanxzjsqeb", "yvdrchgpvwfloiukgvnxzjsqeb", "ymdrchepvwfloiuktahxzosqeb", "ymdlchgpvwfloiuktamizjsqeb", "ymdrchgpcwflovuktanxzjsqzb", "yvduchgpvwfloiukaanxzjsqeb", "ymdrchgpvwfloiuktxmxzjsgeb", "ymdrcrgpvwfloizktanbzjsqeb", "amdrchgpvwfloiukhanxzjsqbb", "ymdrchgpvwfloluktajxijsqeb", "ymdrcfgpvwfloiubtanxznsqeb", "ymdrchgpvwfleiuwtanxzjsweb", "ymdrchgpvwfzdguktanxzjsqeb", "ymdrchgwvwflosyktanxzjsqeb", "ymrrchgpvwfloiultanxzjsqez", "ymdpchgkvwfleiuktanxzjsqeb", "ymdrchgpvwfloijktalxfjsqeb", "ymdrchgpmwfloiuktanzzjsqfb", "ymdrcsgpvwfljiukyanxzjsqeb", "ymdrcarpvwfloiuktapxzjsqeb", "ymdrchgpvwfloiuktanxzjcqvs"]
  let amountOfBoxesWithTwoSameLetters = 0
  let amountOfBoxesWithThreeSameLetters = 0

  boxLabels.map(boxLabel => {
    if (hasNSameLetters(boxLabel, 2)){amountOfBoxesWithTwoSameLetters += 1}
    if (hasNSameLetters(boxLabel, 3)){amountOfBoxesWithThreeSameLetters += 1}
  })
  console.log("The checksum is: ", amountOfBoxesWithTwoSameLetters * amountOfBoxesWithThreeSameLetters)

}

function hasNSameLetters(label, n) {
  let letterArray = {}
  let hasNSameLetters = false;

  for (let x = 0; x < label.length; x++) {
    let letter = label.charAt(x);
    if (letter in letterArray) {
      letterArray[letter] = letterArray[letter] + 1
    } else {
      letterArray[letter] = 1
    }
  }

  Object.entries(letterArray).map(entry => {entry[1] === n ? hasNSameLetters = true : false})
  return hasNSameLetters
}

let t0 = performance.now()
run()
let t1 = performance.now()
console.log(`Took ${t1 - t0} milliseconds`)